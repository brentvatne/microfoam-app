diff --git a/node_modules/expo-router/src/Route.tsx b/node_modules/expo-router/src/Route.tsx
index 7096b62..54f582e 100644
--- a/node_modules/expo-router/src/Route.tsx
+++ b/node_modules/expo-router/src/Route.tsx
@@ -7,7 +7,7 @@ export type DynamicConvention = { name: string; deep: boolean };
 
 export type LoadedRoute = {
   ErrorBoundary?: React.ComponentType<ErrorBoundaryProps>;
-  default: React.ComponentType<any>;
+  default?: React.ComponentType<any>;
   unstable_settings?: Record<string, any>;
   getNavOptions?: (args: any) => any;
   generateStaticParams?: (props: {
@@ -17,7 +17,7 @@ export type LoadedRoute = {
 
 export type RouteNode = {
   /** Load a route into memory. Returns the exports from a route. */
-  loadRoute: () => LoadedRoute;
+  loadRoute: () => Partial<LoadedRoute>;
   /** Loaded initial route name. */
   initialRouteName?: string;
   /** nested routes */
diff --git a/node_modules/expo-router/src/getRoutes.ts b/node_modules/expo-router/src/getRoutes.ts
index 6994788..df64596 100644
--- a/node_modules/expo-router/src/getRoutes.ts
+++ b/node_modules/expo-router/src/getRoutes.ts
@@ -149,7 +149,7 @@ function applyDefaultInitialRouteName(node: RouteNode): RouteNode {
     : undefined;
   const loaded = node.loadRoute();
 
-  if (loaded.unstable_settings) {
+  if (loaded?.unstable_settings) {
     // Allow unstable_settings={ initialRouteName: '...' } to override the default initial route name.
     initialRouteName =
       loaded.unstable_settings.initialRouteName ?? initialRouteName;
diff --git a/node_modules/expo-router/src/useScreens.tsx b/node_modules/expo-router/src/useScreens.tsx
index 3c889d9..90099ed 100644
--- a/node_modules/expo-router/src/useScreens.tsx
+++ b/node_modules/expo-router/src/useScreens.tsx
@@ -110,7 +110,7 @@ function fromImport({ ErrorBoundary, ...component }: LoadedRoute) {
   if (ErrorBoundary) {
     return {
       default: React.forwardRef((props: any, ref: any) => {
-        const children = React.createElement(component.default, {
+        const children = React.createElement(component.default || EmptyRoute, {
           ...props,
           ref,
         });
